USE SAKILA;
SELECT FIRST_NAME,LAST_NAME FROM ACTOR;

SELECT UPPER(CONCAT(FIRST_NAME," ",LAST_NAME))
	AS ACTOR_NAME FROM ACTOR;

SELECT FIRST_NAME,LAST_NAME FROM ACTOR
		WHERE FIRST_NAME="Joe";

SELECT actor_id,first_name,last_name from ACTOR
		WHERE INSTR('LAST_NAME','Gen');

SELECT actor_id,first_name,last_name from ACTOR
		WHERE INSTR('LAST_NAME','LI')
        ORDER BY LAST_NAME,FIRST_NAME;        

SELECT COUNTRY_ID,COUNTRY FROM country
	WHERE country IN('Afghanistan','China','Bangladesh');
    
ALTER TABLE actor
	ADD COLUMN middle_name VARCHAR(30) AFTER first_name;
	SELECT * FROM actor;
    
ALTER TABLE actor
	DROP middle_name;
	
    SELECT * FROM actor;


SELECT LAST_NAME,
	COUNT(LAST_NAME) AS COUNT
    FROM actor
    GROUP BY LAST_NAME;

SELECT LAST_NAME,
	COUNT(LAST_NAME) AS COUNT
    FROM actor
    GROUP BY LAST_NAME
    HAVING COUNT>=2;
    
UPDATE actor
	SET FIRST_NAME='Harpo'
	WHERE first_name='Groucho' and LAST_NAME='Williams';


select first_name,last_name
	from actor
    where last_name='Williams';


UPDATE ACTOR SET FIRST_NAME=CASE
	WHEN FIRST_NAME='Groucho' AND LAST_NAME='Williams' then
		'Mucho Groucho'
	WHEN FIRST_NAME='Harpo' AND LAST_NAME='Williams' then
		'Groucho'
	ELSE FIRST_NAME
    END
    WHERE LAST_NAME='Williams';
    

SHOW CREATE TABLE ADDRESS;

SELECT FIRST_NAME,LAST_NAME FROM STAFF
    INNER JOIN ADDRESS ON STAFF.address_id=ADDRESS.address_id;

SELECT USERNAME,SUM(AMOUNT) FROM STAFF
    INNER JOIN PAYMENT ON STAFF.staff_id=PAYMENT.staff_id
    WHERE PAYMENT_DATE BETWEEN '2005-08-01' AND '2005-08-31'
    GROUP BY USERNAME;

SELECT TITLE,COUNT(*) AS Actors_Count FROM FILM
    INNER JOIN FILM_ACTOR ON FILM.FILM_ID=FILM_ACTOR.FILM_ID
    GROUP BY TITLE;

SELECT TITLE,COUNT(*) AS Count FROM FILM
    INNER JOIN INVENTORY ON FILM.film_id=INVENTORY.FILM_ID
    WHERE Title='Hunchback Impossible' ;    

SELECT CUSTOMER.FIRST_NAME,CUSTOMER.LAST_NAME,SUM(PAYMENT.AMOUNT) AS TOTAL_PAID
	FROM CUSTOMER
    INNER JOIN PAYMENT ON CUSTOMER.customer_id=PAYMENT.CUSTOMER_ID
    GROUP BY FIRST_NAME,LAST_NAME 
    ORDER BY LAST_NAME DESC;

SELECT TITLE FROM FILM
	WHERE TITLE LIKE 'K%' OR TITLE LIKE 'Q%' AND 
    LANGUAGE_ID IN
    (
		SELECT LANGUAGE_ID
        FROM LANGUAGE
        WHERE NAME='English'
	);


SELECT FIRST_NAME,LAST_NAME
FROM ACTOR
WHERE ACTOR_ID IN
(
	SELECT ACTOR_ID
    FROM FILM_ACTOR
    WHERE FILM_ID IN
    (
	SELECT FILM_ID
    FROM FILM
    WHERE TITLE='Alone Trip'
    ));
    




SELECT FIRST_NAME,LAST_NAME,EMAIL 
	FROM CUSTOMER
    INNER JOIN ADDRESS ON CUSTOMER.ADDRESS_ID=ADDRESS.ADDRESS_ID
    INNER JOIN CITY ON ADDRESS.CITY_ID=CITY.CITY_ID
    INNER JOIN COUNTRY ON CITY.COUNTRY_ID=COUNTRY.COUNTRY_ID
    WHERE COUNTRY.COUNTRY='Canada';
    


    
SELECT TITLE,NAME AS 'Genre of Film'
	FROM film_category
    INNER JOIN CATEGORY ON film_category.category_id=CATEGORY.CATEGORY_ID
    INNER JOIN FILM ON FILM.FILM_ID=FILM_CATEGORY.FILM_ID
    WHERE NAME='Family';
    

SELECT title, COUNT(*) AS 'MOST POPULAR RENTALS' FROM payment
	INNER JOIN rental ON payment.rental_id=rental.rental_id
    INNER JOIN inventory ON rental.inventory_id=inventory.inventory_id
	INNER JOIN film ON inventory.film_id=film.film_id
	GROUP BY title
	ORDER BY COUNT(*) DESC;
    

SELECT STORE_ID, concat('$',format(SUM(amount),2)) AS
	'Business From Each Store' FROM STAFF 
	JOIN PAYMENT ON STAFF.STAFF_ID=PAYMENT.STAFF_ID
	GROUP BY store_id;
    
SELECT STORE_ID AS 'Store ID',CITY,COUNTRY 
	FROM STAFF
    INNER JOIN ADDRESS ON STAFF.ADDRESS_ID=ADDRESS.ADDRESS_ID
    INNER JOIN CITY ON ADDRESS.CITY_ID=CITY.CITY_ID
    INNER JOIN COUNTRY ON CITY.COUNTRY_ID=COUNTRY.COUNTRY_ID;


	#category, film_category, inventory, payment, and rental--
    
SELECT NAME AS GENRE, CONCAT('$',FORMAT(SUM(AMOUNT),2)) AS GROSS_REVENUE
	FROM CATEGORY
    INNER JOIN FILM_CATEGORY ON CATEGORY.CATEGORY_ID=FILM_CATEGORY.CATEGORY_ID
    INNER JOIN INVENTORY ON FILM_CATEGORY.FILM_ID=INVENTORY.FILM_ID
    INNER JOIN RENTAL ON INVENTORY.INVENTORY_ID=RENTAL.INVENTORY_ID
    INNER JOIN PAYMENT ON RENTAL.RENTAL_ID=PAYMENT.RENTAL_ID
    GROUP BY GENRE
    ORDER BY SUM(AMOUNT) DESC
	LIMIT 5;
    

CREATE VIEW TOP_5_GENRES AS 
	(SELECT NAME AS GENRE, CONCAT('$',FORMAT(SUM(AMOUNT),2)) AS GROSS_REVENUE
	FROM CATEGORY
    INNER JOIN FILM_CATEGORY ON CATEGORY.CATEGORY_ID=FILM_CATEGORY.CATEGORY_ID
    INNER JOIN INVENTORY ON FILM_CATEGORY.FILM_ID=INVENTORY.FILM_ID
    INNER JOIN RENTAL ON INVENTORY.INVENTORY_ID=RENTAL.INVENTORY_ID
    INNER JOIN PAYMENT ON RENTAL.RENTAL_ID=PAYMENT.RENTAL_ID
    GROUP BY GENRE
    ORDER BY SUM(AMOUNT) DESC
	LIMIT 5);
    
SELECT * FROM TOP_5_GENRES;

DROP VIEW TOP_5_GENRES;



    
